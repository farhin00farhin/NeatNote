<UserControl x:Class="Neat_Note.MenuControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Neat_Note"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" Height="300" Width="422.936" IsVisibleChanged="UserControl_IsVisibleChanged" PreviewKeyDown="UserControl_PreviewKeyDown">
    <UserControl.Resources>
        <RoutedUICommand x:Key="NewCommand"></RoutedUICommand>
        <RoutedUICommand x:Key="OpenCommand"></RoutedUICommand>
        <RoutedUICommand x:Key="SaveAsCommand"></RoutedUICommand>
        <RoutedUICommand x:Key="PrintCommand"></RoutedUICommand>
        <Style x:Key="NewDocumentButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Image Source="images/new.png"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OpenDocumentButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Image Source="images/open.png"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SaveDocumentButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Image Source="images/saveAs.png"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PrintDoccumentButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Image Source="images/print.png"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DeleteDocumentButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Image Source="images/delete.png"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <UserControl.CommandBindings>
        <CommandBinding Command="{StaticResource NewCommand}" Executed="CommandBinding_Executed_New"></CommandBinding>
        <CommandBinding Command="{StaticResource OpenCommand}" Executed="CommandBinding_Executed_Open"></CommandBinding>
        <CommandBinding Command="{StaticResource SaveAsCommand}" Executed="CommandBinding_Executed_SaveAs"></CommandBinding>
        <CommandBinding Command="{StaticResource PrintCommand}" Executed="CommandBinding_Executed_Print"></CommandBinding>
    </UserControl.CommandBindings>
    <UserControl.InputBindings>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{StaticResource NewCommand}"></KeyBinding>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{StaticResource OpenCommand}"></KeyBinding>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{StaticResource SaveAsCommand}"></KeyBinding>
        <KeyBinding Key="P" Modifiers="Ctrl" Command="{StaticResource PrintCommand}"></KeyBinding>
    </UserControl.InputBindings>
    <Grid Background="#D2000000">
        <Grid.Effect>
            <DropShadowEffect BlurRadius="200" Color="#FF7EBDD6" ShadowDepth="0" Direction="0" Opacity="0.5"/>
        </Grid.Effect>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="298*"/>
            <ColumnDefinition Width="125*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="90"/>
            <RowDefinition Height="72"/>
            <RowDefinition Height="51*"/>
        </Grid.RowDefinitions>
        <WrapPanel  Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.ColumnSpan="2" Margin="53,0,52.8,0.2"  >
            <Button x:Name="btnNew" Content="" Height="79" Style="{DynamicResource NewDocumentButtonStyle}" Width="79" Cursor="Hand" ToolTip="New" Command="{StaticResource NewCommand}" IsDefault="True" />
            <Button x:Name="btnOpen" Content="" Height="79" Style="{DynamicResource OpenDocumentButtonStyle}" Width="79" Cursor="Hand" Command="{StaticResource OpenCommand}" ToolTip="Open" />
            <Button x:Name="btnSaveAs" Content="" Height="79" Style="{DynamicResource SaveDocumentButtonStyle}" Width="79" Cursor="Hand" ToolTip="Save as" Command="{StaticResource SaveAsCommand}"/>
        </WrapPanel>
        <StackPanel Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Row="0" Grid.RowSpan="3" Margin="0,0,-0.2,132">
            <Button x:Name="button3" Content="" Height="79" Style="{DynamicResource PrintDoccumentButtonStyle}" Width="79" Cursor="Hand" ToolTip="Print" Command="{StaticResource PrintCommand}"/>
            <Button x:Name="btnDelete" Content="" Height="79" Style="{DynamicResource DeleteDocumentButtonStyle}" Width="79" Cursor="Hand" ToolTip="Delete" Click="btnDelete_Click"/>
        </StackPanel>
        <Label Grid.Column="0" HorizontalAlignment="Left" Content="Recents" Foreground="#FF00A8EC" FontSize="21.333" Margin="24,111,0,0.2" Grid.RowSpan="2"/>
        <ListBox x:Name="recentListBox" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="2" Background="#FF042E3F" BorderBrush="{x:Null}" Grid.RowSpan="2">
            <ListBox.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="30,30,0,0"/>
                </Style>
            </ListBox.Resources>
            <ListBoxItem Content="" Foreground="White" HorizontalAlignment="Left" Margin="20 30 0 0" MouseDoubleClick="ListBoxItem_MouseDoubleClick"/>
            <ListBoxItem Content="" Foreground="White" HorizontalAlignment="Left" Margin="20 0" MouseDoubleClick="ListBoxItem_MouseDoubleClick"/>
            <ListBoxItem Content="" Foreground="White" HorizontalAlignment="Left" Margin="20 0" MouseDoubleClick="ListBoxItem_MouseDoubleClick"/>
        </ListBox>
        <Button x:Name="btnCloseMenu" Content="X" Grid.Column="1" HorizontalAlignment="Center" Height="38" Margin="73,85,13.8,16" Grid.Row="2" Style="{DynamicResource CloseMenuButtonStyle}" VerticalAlignment="Center" Width="38" Click="btnCloseMenu_Click" Cursor="Hand" ToolTip="Close" IsCancel="True"/>

        <DockPanel Grid.Column="1" HorizontalAlignment="Left" Height="100" LastChildFill="False" Margin="314,194.8,-289.2,-142" Grid.Row="2" VerticalAlignment="Top" Width="100"/>

    </Grid>
</UserControl>
